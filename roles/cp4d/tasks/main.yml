---
- set_fact:
    ocp_url="{{ lookup('env', 'OCP_URL') }}"
    openshift_type="{{ lookup('env', 'OPENSHIFT_TYPE') }}"
    image_arch="{{ lookup('env', 'IMAGE_ARCH') }}"
    ocp_username="{{ lookup('env', 'OCP_USERNAME') }}"
    ocp_password="{{ lookup('env', 'OCP_PASSWORD') }}"
    project_cert_manage="{{ lookup('env', 'PROJECT_CERT_MANAGE') }}"
    project_license_service="{{ lookup('env', 'PROJECT_LICENSE_SERVICE') }}"
    project_scheduling_service="{{ lookup('env', 'PROJECT_SCHEDULING_SERVICE') }}"
    project_cpd_inst_operators="{{ lookup('env', 'PROJECT_CPD_INST_OPERATORS') }}"
    project_cpd_inst_operands="{{ lookup('env', 'PROJECT_CPD_INST_OPERANDS') }}"
    stg_class_block="{{ lookup('env', 'STG_CLASS_BLOCK') }}"
    stg_class_file="{{ lookup('env', 'STG_CLASS_FILE') }}"
    ibm_entitlement_key="{{ lookup('env', 'IBM_ENTITLEMENT_KEY') }}"
    version="{{ lookup('env', 'VERSION') }}"
    components="{{ lookup('env', 'COMPONENTS') }}"
- name: Log cpd-cli into Openshift
  ansible.builtin.shell: cpd-cli manage login-to-ocp --username={{ ocp_username | quote }} --password={{ ocp_password | quote }} --server={{ ocp_url | quote }}
- name: Update global pull secret with IBM Entitlement Key
  ansible.builtin.shell: cpd-cli manage add-icr-cred-to-global-pull-secret --entitled_registry_key={{ ibm_entitlement_key | quote}}
- name: Wait for Master MachineConfigPool to finish updating
  kubernetes.core.k8s:
    definition:
      apiVersion: machineconfiguration.openshift.io/v1
      kind: MachineConfigPool
      metadata:
        name: master
    wait: true
    wait_condition:
      type: "Updated"
      status: "True"
- name: Wait for Worker MachineConfigPool to finish updating
  kubernetes.core.k8s:
    definition:
      apiVersion: machineconfiguration.openshift.io/v1
      kind: MachineConfigPool
      metadata:
        name: worker
    wait: true
    wait_condition:
      type: "Updated"
      status: "True"
- name: Create CP4D Operators namespace
  kubernetes.core.k8s:
    name: "{{ project_cpd_inst_operators }}"
    api_version: v1
    kind: Namespace
    state: present
- name: Create CP4D Instance namespace
  kubernetes.core.k8s:
    name: "{{ project_cpd_inst_operands }}"
    api_version: v1
    kind: Namespace
    state: present
- name: Authorize instance topology across namespaces
  ansible.builtin.shell: |
    cpd-cli manage authorize-instance-topology --cpd_operator_ns={{ project_cpd_inst_operators | quote }} --cpd_instance_ns={{ project_cpd_inst_operands | quote }}
    cpd-cli manage setup-instance-topology --release={{ version | quote}} --cpd_operator_ns={{ project_cpd_inst_operators | quote }} --cpd_instance_ns={{ project_cpd_inst_operands | quote }} --license_acceptance="true" --block_storage_class={{ stg_class_block | quote }}
- name: Apply the OLM
  ansible.builtin.shell: |
    cpd-cli manage apply-olm --release={{ version | quote}} --cpd_operator_ns={{ project_cpd_inst_operators | quote }} --components={{ components | quote }}
- name: Apply the CRs (Custom Resources)
  ansible.builtin.shell: |
    cpd-cli manage apply-cr --release={{ version | quote}} --cpd_instance_ns={{ project_cpd_inst_operands | quote }} --components={{ components | quote }} --block_storage_class={{ stg_class_block | quote }} --file_storage_class={{ stg_class_file | quote }} --license_acceptance="true"
